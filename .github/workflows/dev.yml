name: DEV - Build & Basic Tests

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]
  workflow_dispatch:  # Permite ejecuciÃ³n manual

jobs:
  build:
    name: Build Microservices
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        service: [
          'user-service',
          'product-service',
          'order-service'
        ]
    
    steps:
      - name: ðŸ“¥ Checkout code
        uses: actions/checkout@v3
      
      - name: â˜• Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'
      
      - name: ðŸ”¨ Build ${{ matrix.service }}
        run: |
          cd ${{ matrix.service }}
          ../mvnw clean package -DskipTests
      
      - name: ðŸ“¦ Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.service }}-jar
          path: ${{ matrix.service }}/target/*.jar
          retention-days: 1
  
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: build
    
    strategy:
      matrix:
        service: ['user-service', 'product-service', 'order-service']
    
    steps:
      - name: ðŸ“¥ Checkout code
        uses: actions/checkout@v3
      
      - name: â˜• Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'
      
      - name: ðŸ§ª Run Unit Tests for ${{ matrix.service }}
        run: |
          cd ${{ matrix.service }}
          ../mvnw test
      
      - name: ðŸ“Š Publish Test Results
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Unit Tests - ${{ matrix.service }}
          path: ${{ matrix.service }}/target/surefire-reports/*.xml
          reporter: java-junit
          fail-on-error: false
  
  summary:
    name: DEV Summary
    runs-on: ubuntu-latest
    needs: [build, unit-tests]
    if: always()
    
    steps:
      - name: ðŸ“‹ Create Summary
        run: |
          echo "## ðŸš€ DEV Pipeline Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### âœ… Completed Jobs:" >> $GITHUB_STEP_SUMMARY
          echo "- Build: ${{ needs.build.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Unit Tests: ${{ needs.unit-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Environment:** DEV" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
